const map = L.map('map').setView([20.593684, 78.96288], 5);
const tileurl = 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';
const attribution = '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors';
const tiles = L.tileLayer(tileurl, { attribution });
tiles.addTo(map);

// Live location tracking with optimized performance
let liveloc, loccircle, lastLat, lastLng;
const updateThreshold = 5; // Minimum meters to trigger an update

navigator.geolocation.watchPosition(success, error, {
    enableHighAccuracy: true,  // Request precise location
    timeout: 5000,             // Reduce wait time for location fix
    maximumAge: 2000           // Allow slightly older position for faster response
});

function success(pos) {
    const lat = pos.coords.latitude;
    const lng = pos.coords.longitude;
    const accuracy = pos.coords.accuracy;

    // Prevent unnecessary updates if movement is too small
    if (lastLat && lastLng) {
        const distance = getDistance(lastLat, lastLng, lat, lng);
        if (distance < updateThreshold) return; // Skip update if not moved enough
    }

    lastLat = lat;
    lastLng = lng;

    if (!liveloc) {
        liveloc = L.marker([lat, lng]).addTo(map);
        loccircle = L.circle([lat, lng], { radius: accuracy }).addTo(map);
    } else {
        liveloc.setLatLng([lat, lng]);

        // Update accuracy circle only every 3 updates to reduce load
        if (Math.random() < 0.33) {
            loccircle.setLatLng([lat, lng]);
            loccircle.setRadius(accuracy);
        }
    }

    // Smoothly move the map instead of zooming in/out every update
    map.panTo([lat, lng], { animate: true, duration: 1 });
}

function error(err) {
    console.warn(`ERROR(${err.code}): ${err.message}`);
}

// Haversine formula to calculate distance between two lat/lng points
function getDistance(lat1, lng1, lat2, lng2) {
    const R = 6371000; // Radius of the Earth in meters
    const dLat = (lat2 - lat1) * (Math.PI / 180);
    const dLng = (lng2 - lng1) * (Math.PI / 180);
    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +
              Math.cos(lat1 * (Math.PI / 180)) * Math.cos(lat2 * (Math.PI / 180)) *
              Math.sin(dLng / 2) * Math.sin(dLng / 2);
    return R * (2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)));
}



function error(err) {
    if (err.code === 1) {
        alert("Please allow geolocation access.");
    } else {
        alert("Cannot get current location.");
    }
}

// User input
const from = document.getElementById("from");
const to = document.getElementById("to");

const form = document.querySelector('form');
form.addEventListener('submit', (e) => {
    e.preventDefault();

    const fromValue = from.value.toLowerCase().trim();
    const toValue = to.value.toLowerCase().trim();

    console.log(fromValue);
    console.log(toValue);

    if (fromValue === "india" && toValue === "usa" || fromValue === "usa" && toValue === "india") {
        const route1 = [
            [18.939255, 72.844581],
            [18.882276, 72.850817],
            [12.867593, 49.107595],
            [11.948895, 44.247407],
            [17.206874, 40.171121],
            [24.287386, 36.094835],
            [27.715476, 33.899911],
            [29.015530, 32.859326],
            [29.924176, 32.529737],
            [29.947910, 32.580149],
            [29.975369, 32.587021],
            [30.000634, 32.582813],
            [30.047381, 32.573978],
            [30.095077, 32.570332],
            [30.167852, 32.569070],
            [30.215490, 32.565283],
            [30.247478, 32.531205],
            [30.264073, 32.500072],
            [30.272673, 32.426726],
            [30.413085, 32.359221],
            [30.448470, 32.356862],
            [30.486874, 32.352105],
            [30.593622, 32.331232],
            [30.620316, 32.335831],
            [30.683519, 32.351515],
            [30.701874, 32.352576],
            [30.714954, 32.350100],
            [30.740905, 32.337010],
            [30.799471, 32.320382],
            [30.817703, 32.317670],
            [31.019311, 32.310849],
            [31.108900, 32.308054],
            [31.227114, 32.302117],
            [31.249739, 32.306972],
            [31.273396, 32.322752],
            [32.248713, 31.494271],
            [35.810328, 14.473622],
            [36.750739, 11.985576],
            [37.075982, 11.054539],
            [39.102210, 8.348238],
            [36.639541, -2.122627],
            [36.119261, -5.348573],
            [35.805204, -5.921351],
            [35.445399, -9.404057],
            [36.165905, -18.810870],
            [37.851967, -25.138244],
            [38.682884, -27.063421],
            [38.717617, -32.879290],
            [38.559850, -40.088637],
            [38.731503, -56.937065],
            [38.990473, -63.662595],
            [39.448533, -68.429590],
            [40.183954, -72.470624],
            [40.542331, -73.942589],
            [40.542331, -73.942589],
            [40.595387, -74.044036],
            [40.651152, -74.052962]
        ];
        
        const R1line = L.polyline(route1, { color: "green", dashArray: '2,10' });
        R1line.addTo(map);
        R1line.bindTooltip("India to USA", { permanent: true, direction: 'top' });

        let dashOffset = 0;
        setInterval(() => {
            dashOffset = (dashOffset + 2) % 20;
            R1line.setStyle({ dashOffset: dashOffset.toString() });
        }, 100);

        // Apply glow effect using CSS
        L.DomUtil.addClass(R1line._path, 'glowing-line');

        // Add CSS styles
        var style = document.createElement('style');
        style.innerHTML = `
            .glowing-line {
                filter: drop-shadow(0px 0px 5px green) drop-shadow(0px 0px 10px green);
            }
        `;
        document.head.appendChild(style);

        const route2=[
            [18.938983, 72.844633],
            [18.911836, 72.852070],
            [18.888080, 72.805633],
            [18.870907, 72.654967],
            [18.861448, 69.066699],
            [18.649445, 63.949168],
            [18.964569, 57.754857],
            [12.527042, 54.514017],
            [7.982541, 54.059329],
            [2.442437, 46.063187],
            [-4.061836, 39.693783],
            [-5.769402, 39.345681],
            [-6.356950, 39.749951],
            [-7.954580, 39.540858],
            [-8.874299, 39.596038],
            [-10.293275, 40.406096],
            [-11.701621, 43.249405],
            [-14.698262, 40.846139],
            [-16.368057, 40.446238],
            [-18.766384, 36.381296],
            [-20.897769, 35.104136],
            [-22.098825, 35.478919],
            [-22.224537, 35.611039],
            [-23.830597, 35.543286],
            [-25.282604, 35.325802],
            [-25.976110, 32.992370],
            [-28.673905, 32.776563],
            [-33.438180, 27.951520],
            [-34.034366, 25.671032],
            [-34.882191, 20.044404],
            [-34.806371, 18.714080],
            [-34.227863, 18.289115],
            [-33.032491, 17.888089],
            [-32.831551, 17.735256],
            [-32.716082, 17.916530],
            [-31.416959, 17.939851],
            [-27.371926, 15.294957],
            [-26.338735, 14.931951],
            [-25.762230, 14.824832],
            [-25.375295, 14.813409],
            [-24.561655, 14.582210],
            [-23.033497, 14.069488],
            [-18.579138, 12.113490],
            [-17.753946, 11.299316],
            [-15.892687, 11.738769],
            [-13.427862, 11.804162],
            [-11.229458, 13.829240],
            [-2.564923, 9.660301],
            [-0.962488, 8.543365],
            [4.288617, 6.298762],
            [5.779800, 0.831647],
            [4.509076, -1.836945],
            [4.300549, -7.523424],
            [5.286021, -11.612323],
            [16.357781, -26.959446],
            [27.879783, -43.017567],
            [34.172819, -58.402905],
            [38.423270, -68.427698],
            [40.231750, -73.273463],
            [40.574437, -74.081318]
        ];
        const R2line=L.polyline(route2);
        R2line.addTo(map);

        const route3=[
            [18.9430,72.8400],
        [15.682893,71.811984],
        [12.204634,70.592520],
        [8.058594,68.633987],
        [6.776073,67.155849],
        [2.652190,67.229756],
        [-2.371855,65.308176],
        [-7.853886,63.275736],
        [-13.012657,62.462760],
        [-20.853398,57.843578],
        [-23.709148,47.883279],
        [-30.130142,38.259257],
        [-34.183840,24.064921],
        [-33.783008,13.957500],
        [-26.521383,4.145298],
        [-10.500425,-5.562124],
        [2.629842,-20.139421],
        [23.678306,-40.088948],
        [30.585567,-58.298329],
        [39.275460,-74.565581]
        ];
        const R3line=L.polyline(route3);
        R3line.addTo(map);
        map.fitBounds(R1line.getBounds());
    }

    else if (fromValue === "india" && toValue === "australia" || fromValue === "australia" && toValue === "india") {
        
        
        
        const route2 = [
            [12.962135, 80.293197],
            [12.404789, 80.754623],
            [12.211581, 81.677474],
            [11.717190, 83.347396],
            [11.200359, 85.149154],
            [10.704195, 86.709212],
            [10.531423, 87.851790],
            [10.293704, 89.280013],
            [9.969254, 91.455306],
            [9.861032, 92.334212],
            [9.687803, 93.037337],
            [9.319395, 93.938216],
            [8.603153, 95.322493],
            [8.037879, 96.135481],
            [7.362873, 96.926497],
            [6.730483, 97.717512],
            [6.097268, 98.288801],
            [5.550789, 98.684309],
            [5.003803, 99.079817],
            [4.522075, 99.409407],
            [4.413837, 99.502392],
            [4.082544, 99.765388],
            [3.806362, 100.000700],
            [3.391925, 100.360590],
            [2.977310, 100.762005],
            [2.604022, 101.094211],
            [2.424251, 101.509468],
            [2.202961, 101.786306],
            [2.036972, 101.952409],
            [1.857131, 102.256931],
            [1.677272, 102.616820],
            [1.497396, 102.962868],
            [1.096085, 103.156655],
            [0.902327, 103.253548],
            [0.902327, 103.239706],
            [0.667037, 103.364284],
            [0.500943, 103.599596],
            [0.293319, 103.821067],
            [0.030325, 103.904118],
            [-0.288038, 103.931802],
            [-0.592551, 104.028695],
            [-1.076964, 104.457794],
            [-1.312226, 104.610055],
            [-1.630484, 104.790000],
            [-1.879521, 104.942261],
            [-2.114691, 105.108364],
            [-2.197683, 105.302150],
            [-2.225346, 105.537463],
            [-2.349824, 105.703566],
            [-2.501949, 105.814301],
            [-2.723189, 105.869668],
            [-3.083407, 106.119750],
            [-3.209559, 106.125243],
            [-3.346664, 106.064818],
            [-3.467300, 105.982421],
            [-3.615332, 105.921996],
            [-3.730451, 105.943969],
            [-3.851036, 105.993407],
            [-4.004484, 105.949462],
            [-4.212687, 105.905517],
            [-4.382497, 105.927489],
            [-4.530364, 105.965941],
            [-4.716523, 105.971435],
            [-5.061333, 105.949462],
            [-5.318453, 105.921996],
            [-5.477048, 105.916503],
            [-5.630135, 105.976928],
            [-5.755855, 106.125243],
            [-5.865153, 106.257079],
            [-5.808745, 106.411188],
            [-5.819675, 106.806696],
            [-5.830604, 107.059381],
            [-5.863392, 107.301081],
            [-6.038226, 107.619684],
            [-6.114698, 107.993219],
            [-6.158392, 108.256891],
            [-6.387723, 108.597467],
            [-6.627865, 108.938044],
            [-6.682426, 109.212702],
            [-6.693338, 109.575251],
            [-6.747892, 109.937799],
            [-6.758802, 110.289362],
            [-6.464144, 110.531061],
            [-6.322210, 110.816705],
            [-6.365886, 111.157282],
            [-6.475060, 111.453912],
            [-6.573297, 111.761530],
            [-6.671514, 112.069147],
            [-6.715160, 112.365778],
            [-6.758802, 112.662409],
            [-6.791531, 113.266657],
            [-6.780621, 113.695124],
            [-6.780621, 114.068659],
            [-6.911517, 114.354303],
            [-7.064183, 114.617975],
            [-7.293088, 115.002497],
            [-7.772313, 115.837457],
            [-8.011723, 116.254938],
            [-8.142251, 116.485651],
            [-8.229246, 116.892145],
            [-8.207499, 117.243707],
            [-8.076992, 117.518366],
            [-8.022602, 117.847955],
            [-8.022602, 118.188532],
            [-8.098746, 118.518121],
            [-8.115061, 118.847711],
            [-8.248274, 119.199274],
            [-8.443933, 119.320124],
            [-8.748094, 119.320124],
            [-8.986905, 119.561823],
            [-9.138793, 119.803522],
            [-9.301459, 120.100153],
            [-9.464049, 120.286920],
            [-9.583233, 120.539606],
            [-9.767344, 120.726373],
            [-10.005454, 120.913141],
            [-10.081179, 120.924128],
            [-10.394710, 120.979059],
            [-10.718720, 121.209772],
            [-11.010034, 121.978815],
            [-11.398003, 123.055475],
            [-11.699393, 124.582575],
            [-11.989707, 125.944879],
            [-12.226029, 127.526910],
            [-12.333379, 129.163873],
            [-12.279710, 129.987848],
            [-12.236766, 130.526178],
            [-12.344112, 130.723932],
            [-12.574375, 130.863609]
        ];

        const route1=[[13.0827,80.2757],
        [12.607821,80.491083],
        [12.243036,80.557001],
        [11.727189,80.578973],
        [11.318123,80.600946],
        [10.886896,80.644891],
        [10.390213,80.754754],
        [9.676209,80.447138],
        [9.221045,80.886591],
        [8.895566,81.194208],
        [8.439411,81.457880],
        [8.265495,81.501825],
        [7.873904,81.721552],
        [7.503728,81.919305],
        [7.089629,81.985223],
        [6.631508,82.248895],
        [6.216650,82.600458],
        [5.626557,83.259637],
        [5.035864,83.677118],
        [4.466541,84.336297],
        [3.502092,85.566766],
        [2.821980,86.973017],
        [1.284928,89.587762],
        [-0.143186,91.631219],
        [-2.471521,93.806512],
        [-3.195727,94.795282],
        [-4.291999,96.531121],
        [-5.146020,98.069207],
        [-5.977043,99.936883],
        [-6.981316,101.760614],
        [-8.157479,104.397333],
        [-8.657417,106.902216],
        [-9.568610,109.473016],
        [-10.369317,111.494501],
        [-11.405006,112.615106],
        [-12.865673,115.295942],
        [-15.167888,118.723676],
        [-16.478538,120.349652],
        [-17.780380,122.019574]]
        
        const R1line = L.polyline(route1, { color: "green", dashArray: '2,10' });
        R1line.addTo(map);
        R1line.bindTooltip("India to Australia", { permanent: true, direction: 'top' });

        let dashOffset = 0;
        setInterval(() => {
            dashOffset = (dashOffset + 2) % 20;
            R1line.setStyle({ dashOffset: dashOffset.toString() });
        }, 100);

        // Apply glow effect using CSS
        L.DomUtil.addClass(R1line._path, 'glowing-line');

        // Add CSS styles
        var style = document.createElement('style');
        style.innerHTML = `
            .glowing-line {
                filter: drop-shadow(0px 0px 5px green) drop-shadow(0px 0px 10px green);
            }
        `;
        document.head.appendChild(style);

        
        const R2line=L.polyline(route2);
        R2line.addTo(map);
        map.fitBounds(R1line.getBounds());

    }

    else if (fromValue === "india" && toValue === "uk" || fromValue === "uk" && toValue === "india") {
        const route2 = [[18.938983, 72.844633],
        [18.911836, 72.852070],
        [18.888080, 72.805633],
        [18.870907, 72.654967],
        [18.861448, 69.066699],
        [18.649445, 63.949168],
        [18.964569, 57.754857],
        [12.527042, 54.514017],
        [7.982541, 54.059329],
        [2.442437, 46.063187],
        [-4.061836, 39.693783],
        [-5.769402, 39.345681],
        [-6.356950, 39.749951],
        [-7.954580, 39.540858],
        [-8.874299, 39.596038],
        [-10.293275, 40.406096],
        [-11.701621, 43.249405],
        [-14.698262, 40.846139],
        [-16.368057, 40.446238],
        [-18.766384, 36.381296],
        [-20.897769, 35.104136],
        [-22.098825, 35.478919],
        [-22.224537, 35.611039],
        [-23.830597, 35.543286],
        [-25.282604, 35.325802],
        [-25.976110, 32.992370],
        [-28.673905, 32.776563],
        [-33.438180, 27.951520],
        [-34.034366, 25.671032],
        [-34.882191, 20.044404],
        [-34.806371, 18.714080],
        [-34.227863, 18.289115],
        [-32.831551, 17.735256],
        [-32.716082, 17.916530],
        [-31.416959, 17.939851],
        [-27.371926, 15.294957],
        [-26.338735, 14.931951],
        [-25.762230, 14.824832],
        [-25.375295, 14.813409],
        [-24.561655, 14.582210],
        [-23.033497, 14.069488],
        [-18.579138, 12.113490],
        [-17.753946, 11.299316],
        [-15.892687, 11.738769],
        [-13.427862, 11.804162],
        [-11.229458, 13.829240],
        [-2.564923, 9.660301],
        [-0.962488, 8.543365],
        [4.288617, 6.298762],
       [4.335436, -7.752620],
        [4.641022, -8.745079],
        [6.271377, -10.752614],
        [6.653414, -11.374567],
        [7.528703, -12.889873],
        [9.201851, -14.085552],
        [10.281510, -15.029097],
        [11.082975, -16.236514],
        [11.937019, -17.020136],
        [14.660335, -17.499904],
        [16.701861, -17.492276],
        [19.234423, -16.524030],
        [21.660914, -17.466166],
        [22.638510, -16.876604],
        [23.670177, -16.011279],
        [25.094472, -15.318073],
        [26.173508, -14.484306],
        [27.910168, -15.385312],
        [38.409058, -9.219503],
        [38.708225, -9.487614],
        [38.776391, -9.557531],
        [39.080070, -9.497325],
        [39.359568, -9.409841],
        [40.316927, -9.391872],
        [41.669609, -8.842189],
        [42.485581, -9.114721],
        [42.884437, -9.285369],
        [43.035096, -9.388302],
        [43.189634, -9.182436],
        [43.280190, -8.999876],
        [45.537051, -6.945106],
        [47.503874, -5.453553],
        [48.429368, -4.801502],
        [49.001065, -4.849299],
        [49.631293, -3.157405],
        [50.105727, -1.817073],
        [50.428762, 0.017644],
        [50.900001, 0.978948],
        [51.150493, 1.443120],
        [51.319026, 1.509038],
        [51.403061, 1.500798],
        [51.435604, 1.220647],
        [51.437316, 0.926763]
        ];

        const route1=[[18.939255, 72.844581],
        [18.882276, 72.850817],
        [12.867593, 49.107595],
        [11.948895, 44.247407],
        [17.206874, 40.171121],
        [24.287386, 36.094835],
        [27.715476, 33.899911],
        [29.015530, 32.859326],
        [29.924176, 32.529737],
        [29.947910, 32.580149],
        [29.975369, 32.587021],
        [30.000634, 32.582813],
        [30.047381, 32.573978],
        [30.095077, 32.570332],
        [30.167852, 32.569070],
        [30.215490, 32.565283],
        [30.247478, 32.531205],
        [30.264073, 32.500072],
        [30.272673, 32.426726],
        [30.413085, 32.359221],
        [30.448470, 32.356862],
        [30.486874, 32.352105],
        [30.593622, 32.331232],
        [30.620316, 32.335831],
        [30.683519, 32.351515],
        [30.701874, 32.352576],
        [30.714954, 32.350100],
        [30.740905, 32.337010],
        [30.799471, 32.320382],
        [30.817703, 32.317670],
        [31.019311, 32.310849],
        [31.108900, 32.308054],
        [31.227114, 32.302117],
        [31.249739, 32.306972],
        [31.273396, 32.322752],
        [32.248713, 31.494271],
        [35.810328, 14.473622],
        [36.750739, 11.985576],
        [37.075982, 11.054539],
        [39.102210, 8.348238],
        [36.639541, -2.122627],
        [36.119261, -5.348573],
        [35.805204, -5.921351],
        [35.445399, -9.404057],
        [38.409058, -9.219503],
        [38.708225, -9.487614],
        [38.776391, -9.557531],
        [39.080070, -9.497325],
        [39.359568, -9.409841],
        [40.316927, -9.391872],
        [41.669609, -8.842189],
        [42.485581, -9.114721],
        [42.884437, -9.285369],
        [43.035096, -9.388302],
        [43.189634, -9.182436],
        [43.280190, -8.999876],
        [45.537051, -6.945106],
        [47.503874, -5.453553],
        [48.429368, -4.801502],
        [49.001065, -4.849299],
        [49.631293, -3.157405],
        [50.105727, -1.817073],
        [50.428762, 0.017644],
        [50.900001, 0.978948],
        [51.150493, 1.443120],
        [51.319026, 1.509038],
        [51.403061, 1.500798],
        [51.435604, 1.220647],
        [51.437316, 0.926763],
        [51.475048, 0.750235],
        [51.497182, 0.623102],
        [51.494245, 0.506118],
        [51.493071, 0.459890],
        [51.483084, 0.441022]]
        
        const R1line = L.polyline(route1, { color: "green", dashArray: '2,10' });
        R1line.addTo(map);
        R1line.bindTooltip("India to United Kingdom", { permanent: true, direction: 'top' });

        let dashOffset = 0;
        setInterval(() => {
            dashOffset = (dashOffset + 2) % 20;
            R1line.setStyle({ dashOffset: dashOffset.toString() });
        }, 100);

        // Apply glow effect using CSS
        L.DomUtil.addClass(R1line._path, 'glowing-line');

        // Add CSS styles
        var style = document.createElement('style');
        style.innerHTML = `
            .glowing-line {
                filter: drop-shadow(0px 0px 5px green) drop-shadow(0px 0px 10px green);
            }
        `;
        document.head.appendChild(style);

        
        const R2line=L.polyline(route2);
        R2line.addTo(map);
        map.fitBounds(R1line.getBounds());

    }

    else if (fromValue === "china" && toValue === "australia" || fromValue === "australia" && toValue === "china") {
        const route2 = [[22.262756, 113.984887],
        [21.549246, 113.962915],
        [19.822618, 114.072778],
        [19.569201, 114.028833],
        [17.381142, 114.534204],
        [15.484482, 114.094751],
        [12.655443, 114.413354],
        [10.481428, 114.325464],
        [8.270302, 114.655053],
        [6.789088, 114.391382],
        [5.587657, 114.281518],
        [4.975037, 114.193628],
        [4.646609, 113.929956],
        [4.164640, 113.556421],
        [3.550803, 112.941186],
        [3.243727, 112.194116],
        [2.870724, 111.469019],
        [2.651253, 111.029565],
        [1.838895, 110.656030],
        [1.992618, 109.930933],
        [2.234152, 109.469507],
        [1.860856, 109.073999],
        [1.465516, 108.898218],
        [0.784499, 108.766382],
        [0.301124, 108.788355],
        [-0.380025, 108.898218],
        [-1.105057, 109.117945],
        [-2.159301, 109.535425],
        [-2.927581, 110.106714],
        [-3.497970, 110.941675],
        [-3.848809, 112.238062],
        [-3.585692, 112.633570],
        [-3.585692, 113.468531],
        [-4.022484, 114.171699],
        [-4.297276, 114.599786],
        [-4.406822, 116.423517],
        [-4.976195, 119.060235],
        [-5.260700, 119.257989],
        [-5.698144, 119.389825],
        [-5.703610, 120.213800],
        [-5.670813, 120.488458],
        [-5.791059, 121.334406],
        [-5.736405, 122.773614],
        [-5.976842, 123.938165],
        [-6.228096, 125.311456],
        [-6.926588, 127.267023],
        [-7.438892, 128.222833],
        [-7.994118, 128.552423],
        [-8.961206, 128.739191],
        [-10.185347, 129.134698],
        [-11.383269, 129.035822],
        [-12.017989, 129.760919],
        [-12.103940, 130.431085],
        [-12.232814, 130.683771],
        [-12.505121, 130.823847]
        ];

        const route1=[[30.904442, 122.007318],
        [30.394059, 122.534662],
        [29.211969, 123.018061],
        [27.491073, 122.996088],
        [25.881319, 122.666498],
        [24.649366, 122.007318],
        [23.687141, 121.743647],
        [23.203336, 121.567865],
        [22.494645, 121.150385],
        [21.516811, 121.523920],
        [20.820156, 122.029291],
        [20.367650, 122.249018],
        [19.748456, 122.336908],
        [18.981469, 122.424799],
        [18.294403, 122.512690],
        [17.646484, 122.468744],
        [17.206238, 122.644525],
        [16.659719, 122.512690],
        [16.111636, 122.314936],
        [15.731301, 122.029291],
        [15.371441, 122.007319],
        [14.862348, 122.512690],
        [14.501010, 123.303705],
        [14.202993, 124.160639],
        [13.989884, 124.534174],
        [13.392133, 124.644037],
        [12.728605, 125.127436],
        [12.385452, 125.457025],
        [12.084823, 125.764643],
        [11.439488, 125.830561],
        [10.511957, 126.160150],
        [9.971396, 126.270014],
        [9.516628, 126.335932],
        [8.974450, 126.445795],
        [8.344510, 126.643549],
        [7.713552, 126.753412],
        [6.710820, 126.731439],
        [5.749745, 126.929193],
        [4.173693, 127.895990],
        [2.901733, 128.708979],
        [2.177353, 128.840814],
        [1.562449, 128.950678],
        [0.749633, 128.950678],
        [0.244282, 129.016596],
        [-0.524752, 129.016596],
        [-1.689066, 129.214350],
        [-2.457600, 129.631830],
        [-2.874627, 130.466791],
        [-3.401179, 130.884272],
        [-4.080875, 131.060053],
        [-5.022709, 131.301752],
        [-5.547809, 131.323725],
        [-6.552908, 131.719232],
        [-7.011103, 131.916986],
        [-7.686656, 132.136713],
        [-9.164628, 131.763178],
        [-9.987946, 131.169916],
        [-11.046502, 130.730463],
        [-11.132752, 130.247065],
        [-11.606662, 129.961420],
        [-11.972317, 130.071283],
        [-12.122738, 130.444819],
        [-12.278442, 130.807367],
        [-12.494218, 130.807822]]
        
        const R1line = L.polyline(route1, { color: "green", dashArray: '2,10' });
        R1line.addTo(map);
        R1line.bindTooltip("China to Australia", { permanent: true, direction: 'top' });

        let dashOffset = 0;
        setInterval(() => {
            dashOffset = (dashOffset + 2) % 20;
            R1line.setStyle({ dashOffset: dashOffset.toString() });
        }, 100);

        // Apply glow effect using CSS
        L.DomUtil.addClass(R1line._path, 'glowing-line');

        // Add CSS styles
        var style = document.createElement('style');
        style.innerHTML = `
            .glowing-line {
                filter: drop-shadow(0px 0px 5px green) drop-shadow(0px 0px 10px green);
            }
        `;
        document.head.appendChild(style);

        
        const R2line=L.polyline(route2);
        R2line.addTo(map);
        map.fitBounds(R1line.getBounds());

    }

    else if (fromValue === "france" && toValue === "usa" || fromValue === "usa" && toValue === "france") {
        const route2 = [[48.3904, -4.4861],
        [48.318648, -4.637676],
        [48.311399, -4.746674],
        [48.291097, -4.921071],
        [48.212714, -5.623020],
        [48.203997, -6.176730],
        [48.189466, -6.856879],
        [48.172023, -7.497788],
        [48.127714, -8.123655],
        [48.113046, -10.661496],
        [48.149709, -13.561887],
        [48.164367, -15.484494],
        [48.244909, -18.538693],
        [48.288788, -21.439084],
        [48.054323, -24.603080],
        [47.582191, -30.228079],
        [46.805808, -34.446829],
        [46.200855, -38.929251],
        [45.589167, -42.356985],
        [45.156975, -45.784719],
        [44.783897, -48.860891],
        [44.345571, -51.937062],
        [44.093617, -55.013234],
        [43.777158, -57.737843],
        [43.522778, -60.550343],
        [43.490936, -62.110413],
        [43.315333, -63.516662],
        [43.538739, -65.296447],
        [43.347298, -66.153381],
        [43.379247, -67.339904],
        [43.538739, -68.658264],
        [43.459046, -69.493225],
        [43.554665, -69.998596],
        [43.703768, -70.201843]
        ];

        const route1=[[29.384976, -94.770199],
        [29.375852, -94.779297],
        [29.371065, -94.784619],
        [29.365036, -94.785192],
        [29.358304, -94.783016],
        [29.354362, -94.776231],
        [29.351315, -94.760706],
        [29.352372, -94.726531],
        [29.343437, -94.690851],
        [29.226906, -94.464690],
        [29.118187, -94.077908],
        [28.878246, -93.710491],
        [28.845964, -92.899574],
        [28.449188, -90.268873],
        [28.093232, -86.900805],
        [28.132841, -84.385981],
        [27.912385, -82.847585],
        [27.823549, -82.854482],
        [27.715234, -82.834686],
        [26.627046, -82.765722],
        [25.596824, -82.692875],
        [24.425066, -82.583604],
        [23.152894, -82.355811],
        [23.841564, -81.653900],
        [25.167240, -80.105895],
        [25.552640, -80.166908],
        [25.726723, -80.233901],
        [25.728054, -80.166908],
        [25.728054, -80.166908],
        [25.414939, -79.157832],
        [25.265494, -78.681311],
        [25.206093, -78.198392],
        [25.200400, -78.029831],
        [25.160969, -77.788266],
        [25.126009, -77.639934],
        [25.090245, -77.408348],
        [25.079365, -77.435874],
        [25.314461, -77.104909],
        [25.492811, -76.887834],
        [26.092429, -77.174291],
        [26.290661, -76.996671],
        [26.320650, -76.991839],
        [26.332310, -76.993512],
        [27.080323, -74.790877],
        [27.665877, -71.493934],
        [28.301103, -67.297825],
        [28.775051, -60.164439],
        [30.080260, -54.110053],
        [31.214798, -48.415333],
        [37.724966, -33.122734],
        [41.540653, -26.715347],
        [44.396454, -17.836513],
        [46.181880, -13.023358],
        [46.436694, -12.162621],
        [46.834720, -10.353315],
        [47.265593, -8.649405],
        [47.728446, -7.208987],
        [48.023002, -5.961795],
        [48.136526, -5.147255],
        [48.303893, -4.709772],
        [48.341615, -4.584575],
        [48.365362, -4.491732],
        [48.371925, -4.492161],
        [48.374494, -4.487142],
        [48.376571, -4.483785],
        [48.378513, -4.483141],
        [48.379415, -4.483924],
        [48.380444, -4.484795],
        [48.381380, -4.485526]]
        
        const R1line = L.polyline(route1, { color: "green", dashArray: '2,10' });
        R1line.addTo(map);
        R1line.bindTooltip("China to Australia", { permanent: true, direction: 'top' });

        let dashOffset = 0;
        setInterval(() => {
            dashOffset = (dashOffset + 2) % 20;
            R1line.setStyle({ dashOffset: dashOffset.toString() });
        }, 100);

        // Apply glow effect using CSS
        L.DomUtil.addClass(R1line._path, 'glowing-line');

        // Add CSS styles
        var style = document.createElement('style');
        style.innerHTML = `
            .glowing-line {
                filter: drop-shadow(0px 0px 5px green) drop-shadow(0px 0px 10px green);
            }
        `;
        document.head.appendChild(style);

        
        const R2line=L.polyline(route2);
        R2line.addTo(map);
        map.fitBounds(R1line.getBounds());

    }

});





//weather
const apiKey = "c4aea038ca4f45d6852111739250503"; // Replace with your WeatherAPI.com API key

async function getWeather(lat = null, lon = null) {
    const location = document.getElementById("location").value.trim();
    const userLat = document.getElementById("lat").value.trim();
    const userLon = document.getElementById("lon").value.trim();
    let url = "";

    if (location) {
        url = `https://api.weatherapi.com/v1/forecast.json?key=${apiKey}&q=${location}&days=3&alerts=yes&aqi=yes`;
    } else if (userLat && userLon) {
        url = `https://api.weatherapi.com/v1/forecast.json?key=${apiKey}&q=${userLat},${userLon}&days=3&alerts=yes&aqi=yes`;
    } else if (lat && lon) {
        url = `https://api.weatherapi.com/v1/forecast.json?key=${apiKey}&q=${lat},${lon}&days=3&alerts=yes&aqi=yes`;
    } else {
        document.getElementById("weather-info").innerHTML = `<p style="color:red;">Enter city or coordinates.</p>`;
        return;
    }

    try {
        const response = await fetch(url);
        const data = await response.json();

        if (data.error) {
            document.getElementById("weather-info").innerHTML = `<p style="color:red;">${data.error.message}</p>`;
            return;
        }

        // Get weather icon
        const iconUrl = `https:${data.current.condition.icon}`;
        document.getElementById("weather-icon").src = iconUrl;
        document.getElementById("weather-icon").style.display = "block";

        // Display weather info
        document.getElementById("weather-info").innerHTML = `
            <h3>📍 ${data.location.name}, ${data.location.country}</h3>
            <p>🌡 Temperature: <strong>${data.current.temp_c}°C</strong></p>
            <p>💧 Humidity: <strong>${data.current.humidity}%</strong></p>
            <p>☁ Condition: <strong>${data.current.condition.text}</strong></p>
            <p>🌬 Wind Speed: <strong>${data.current.wind_kph} km/h</strong></p>
            <p>🌀 Air Quality Index: <strong>${data.current.air_quality["us-epa-index"]}</strong></p>
        `;

        // Check for weather alerts
        let alertsData = data.alerts && data.alerts.alert;
        const alertMessage = document.getElementById("weather-alert");

        if (alertsData && alertsData.length > 0) {
            let alertInfo = alertsData[0]; // Get the first alert

            alertMessage.style.color = "red"; // Red text for alerts
            alertMessage.innerHTML = `
                <h4>${alertInfo.headline}</h4>
                <p>${alertInfo.msgtype}: ${alertInfo.description}</p>
                <p><strong>⚠️ Severity:</strong> ${alertInfo.severity}</p>
                <p><strong>📆 Effective:</strong> ${alertInfo.effective}</p>
                <p><strong>⌛ Expires:</strong> ${alertInfo.expires}</p>
            `;

            // Show a popup alert with the weather warning
            window.alert(`🚨 WEATHER ALERT 🚨\n\n${alertInfo.headline}\n${alertInfo.description}\n⚠️ Severity: ${alertInfo.severity}\n📆 Effective: ${alertInfo.effective}\n⌛ Expires: ${alertInfo.expires}`);
        } else {
            alertMessage.style.color = "green"; // Green text if no alert
            alertMessage.innerHTML = "<p>No weather alerts currently.</p>";
        }

    } catch (error) {
        document.getElementById("weather-info").innerHTML = `<p style="color:red;">Error fetching weather data!</p>`;
    }
}

// Get user's current location
function getCurrentLocation() {
    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(
            position => getWeather(position.coords.latitude, position.coords.longitude),
            error => alert("Geolocation access denied! Please enter location manually.")
        );
    } else {
        alert("Geolocation is not supported by this browser.");
    }
}




//fule 

function haversineDistance(coords) {
    function toRadians(degrees) {
        return degrees * (Math.PI / 180);
    }
    
    function distanceBetween(lat1, lon1, lat2, lon2) {
        const R = 6371; // Radius of Earth in km
        const dLat = toRadians(lat2 - lat1);
        const dLon = toRadians(lon2 - lon1);
        const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +
                  Math.cos(toRadians(lat1)) * Math.cos(toRadians(lat2)) *
                  Math.sin(dLon / 2) * Math.sin(dLon / 2);
        const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
        return R * c;
    }
    
    let totalDistance = 0;
    for (let i = 0; i < coords.length - 1; i++) {
        const [lat1, lon1] = coords[i];
        const [lat2, lon2] = coords[i + 1];
        totalDistance += distanceBetween(lat1, lon1, lat2, lon2);
    }
    
    return totalDistance;
}

// Example usage
const coordinates = [
    [12.962135, 80.293197],
    [12.404789, 80.754623],
    [12.211581, 81.677474],
    [11.717190, 83.347396],
    [11.200359, 85.149154],
    [10.704195, 86.709212],
    [10.531423, 87.851790],
    [10.293704, 89.280013],
    [9.969254, 91.455306],
    [9.861032, 92.334212],
    [9.687803, 93.037337],
    [9.319395, 93.938216],
    [8.603153, 95.322493],
    [8.037879, 96.135481],
    [7.362873, 96.926497],
    [6.730483, 97.717512],
    [6.097268, 98.288801],
    [5.550789, 98.684309],
    [5.003803, 99.079817],
    [4.522075, 99.409407],
    [4.413837, 99.502392],
    [4.082544, 99.765388],
    [3.806362, 100.000700],
    [3.391925, 100.360590],
    [2.977310, 100.762005],
    [2.604022, 101.094211],
    [2.424251, 101.509468],
    [2.202961, 101.786306],
    [2.036972, 101.952409],
    [1.857131, 102.256931],
    [1.677272, 102.616820],
    [1.497396, 102.962868],
    [1.096085, 103.156655],
    [0.902327, 103.253548],
    [0.902327, 103.239706],
    [0.667037, 103.364284],
    [0.500943, 103.599596],
    [0.293319, 103.821067],
    [0.030325, 103.904118],
    [-0.288038, 103.931802],
    [-0.592551, 104.028695],
    [-1.076964, 104.457794],
    [-1.312226, 104.610055],
    [-1.630484, 104.790000],
    [-1.879521, 104.942261],
    [-2.114691, 105.108364],
    [-2.197683, 105.302150],
    [-2.225346, 105.537463],
    [-2.349824, 105.703566],
    [-2.501949, 105.814301],
    [-2.723189, 105.869668],
    [-3.083407, 106.119750],
    [-3.209559, 106.125243],
    [-3.346664, 106.064818],
    [-3.467300, 105.982421],
    [-3.615332, 105.921996],
    [-3.730451, 105.943969],
    [-3.851036, 105.993407],
    [-4.004484, 105.949462],
    [-4.212687, 105.905517],
    [-4.382497, 105.927489],
    [-4.530364, 105.965941],
    [-4.716523, 105.971435],
    [-5.061333, 105.949462],
    [-5.318453, 105.921996],
    [-5.477048, 105.916503],
    [-5.630135, 105.976928],
    [-5.755855, 106.125243],
    [-5.865153, 106.257079],
    [-5.808745, 106.411188],
    [-5.819675, 106.806696],
    [-5.830604, 107.059381],
    [-5.863392, 107.301081],
    [-6.038226, 107.619684],
    [-6.114698, 107.993219],
    [-6.158392, 108.256891],
    [-6.387723, 108.597467],
    [-6.627865, 108.938044],
    [-6.682426, 109.212702],
    [-6.693338, 109.575251],
    [-6.747892, 109.937799],
    [-6.758802, 110.289362],
    [-6.464144, 110.531061],
    [-6.322210, 110.816705],
    [-6.365886, 111.157282],
    [-6.475060, 111.453912],
    [-6.573297, 111.761530],
    [-6.671514, 112.069147],
    [-6.715160, 112.365778],
    [-6.758802, 112.662409],
    [-6.791531, 113.266657],
    [-6.780621, 113.695124],
    [-6.780621, 114.068659],
    [-6.911517, 114.354303],
    [-7.064183, 114.617975],
    [-7.293088, 115.002497],
    [-7.772313, 115.837457],
    [-8.011723, 116.254938],
    [-8.142251, 116.485651],
    [-8.229246, 116.892145],
    [-8.207499, 117.243707],
    [-8.076992, 117.518366],
    [-8.022602, 117.847955],
    [-8.022602, 118.188532],
    [-8.098746, 118.518121],
    [-8.115061, 118.847711],
    [-8.248274, 119.199274],
    [-8.443933, 119.320124],
    [-8.748094, 119.320124],
    [-8.986905, 119.561823],
    [-9.138793, 119.803522],
    [-9.301459, 120.100153],
    [-9.464049, 120.286920],
    [-9.583233, 120.539606],
    [-9.767344, 120.726373],
    [-10.005454, 120.913141],
    [-10.081179, 120.924128],
    [-10.394710, 120.979059],
    [-10.718720, 121.209772],
    [-11.010034, 121.978815],
    [-11.398003, 123.055475],
    [-11.699393, 124.582575],
    [-11.989707, 125.944879],
    [-12.226029, 127.526910],
    [-12.333379, 129.163873],
    [-12.279710, 129.987848],
    [-12.236766, 130.526178],
    [-12.344112, 130.723932],
    [-12.574375, 130.863609]
];